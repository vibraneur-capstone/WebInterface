{"version":3,"sources":["Login.jsx"],"names":["Login","React","Component","constructor","props","state","redirect_user","setEmail","bind","setPassword","login","email","setState","password","e","preventDefault","render","redirect","undefined","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel, Navbar, NavDropdown, Nav, Form } from \"react-bootstrap\";\nimport \"./styles/Login.scss\";\nimport { Redirect } from 'react-router-dom';\n\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      redirect_user: false\n    }\n\n    this.setEmail = this.setEmail.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  setEmail(email) {\n    this.setState({\n      email: email\n    })\n  }\n\n  setPassword(password) {\n    this.setState({\n      password: password\n    })\n  }\n  \nlogin(e) {\n    e.preventDefault();\n    this.setState({\n      redirect_user: true\n    })\n}\n\n\nrender() {\n  let redirect = undefined;\n  if (this.state.redirect_user) {\n    redirect = <Redirect to='/user'></Redirect>\n  }\n  return (\n    <div className=\"Login\">\n      \n      <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">Vibraneur</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n              <Nav.Link href=\"#link\">Link</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Form inline>\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button variant=\"outline-success\">Search</Button>\n            </Form>\n          </Navbar.Collapse>\n        </Navbar>\n      \n      <form >\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={this.state.email}\n            onChange={e => this.setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={this.state.password}\n            onChange={e => this.setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <button block bsSize=\"large\" type=\"submit\" onClick = {this.login}>\n          Login\n        </button>\n        {redirect}\n      </form>\n    </div>\n  );\n}\n  \n}"]}