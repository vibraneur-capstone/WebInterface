{"version":3,"sources":["Panel.jsx"],"names":["Panel","React","Component","constructor","props","state","style","height","width","removePanel","bind","console","warn","render","draggableStyle","border","titleStyle","focus","id","newStyle","backgroundColor","containerStyle","e","changeFocus","stopPropagation","direction","ref","d","setState"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEe,MAAMA,KAAN,SAAoBC,eAAMC,SAA1B,CAAoC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,OADL;AAEHC,QAAAA,KAAK,EAAE;AAFJ;AADE,KAAb;AAOA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,GAAG;AACVE,IAAAA,OAAO,CAACC,IAAR,CAAa,gBAAb;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAIC,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE;AADS,KAArB;AAIAD,IAAAA,cAAc,qBACPA,cADO,MACY,KAAKT,KAAL,CAAWC,KADvB,CAAd;AAIA,QAAIU,UAAU,GAAG;AACbD,MAAAA,MAAM,EAAE,kBADK;AAEbP,MAAAA,KAAK,EAAE;AAFM,KAAjB;;AAKA,QAAI,KAAKJ,KAAL,CAAWa,KAAX,KAAqB,KAAKb,KAAL,CAAWc,EAApC,EAAwC;AACpC,UAAIC,QAAQ,GAAG;AACXC,QAAAA,eAAe,EAAE;AADN,OAAf;AAGAN,MAAAA,cAAc,qBAAQA,cAAR,MAA2BK,QAA3B,CAAd;AACH;;AAED,QAAIE,cAAc,GAAG;AACjBb,MAAAA,KAAK,EAAE,MADU;AAEjBD,MAAAA,MAAM,EAAE;AAFS,KAArB;AAKA,WAEI,6BAAC,uBAAD;AAAW,MAAA,MAAM,EAAGe,CAAD,IAAO,KAAKlB,KAAL,CAAWmB,WAAX,CAAuBD,CAAvB,EAA0B,KAAKlB,KAAL,CAAWc,EAArC,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,6BAAC,sBAAD;AACI,MAAA,IAAI,EAAE;AAAEV,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiBE,KAA1B;AAAiCD,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,KAAX,CAAiBC;AAA1D,OADV;AAEI,MAAA,aAAa,EAAGe,CAAD,IAAO;AAACA,QAAAA,CAAC,CAACE,eAAF;AAAoB,OAF/C;AAGI,MAAA,YAAY,EAAE,CAACF,CAAD,EAAIG,SAAJ,EAAeC,GAAf,EAAoBC,CAApB,KAA0B;AACpCL,QAAAA,CAAC,CAACE,eAAF;AACA,aAAKI,QAAL,CAAc;AACVtB,UAAAA,KAAK,EAAE;AACHE,YAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiBE,KAAjB,GAAyBmB,CAAC,CAACnB,KAD/B;AAEHD,YAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0BoB,CAAC,CAACpB;AAFjC;AADG,SAAd;AAMH,OAXL;AAYI,MAAA,KAAK,EAAEO,cAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcA;AAAK,MAAA,KAAK,EAAEO,cAAZ;AAA4B,MAAA,OAAO,EAAGC,CAAD,IAAO,KAAKlB,KAAL,CAAWmB,WAAX,CAAuBD,CAAvB,EAA0B,KAAKlB,KAAL,CAAWc,EAArC,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,6BAAC,iBAAD;AAAU,MAAA,KAAK,EAAEF,UAAjB;AACI,MAAA,WAAW,EAAE,KAAKP,WADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,6BAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAdA,CADJ,CAFJ;AA6BH;;AA1E8C","sourcesContent":["import React from 'react';\nimport TitleBar from './TitleBar.jsx';\nimport Draggable from 'react-draggable';\nimport SingleBearing from './DashBoardPanels/SingleBearing.jsx';\nimport { Resizable } from 're-resizable';\n\nexport default class Panel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            style: {\n                height: '300px',\n                width: '300px'\n            }\n        }\n\n        this.removePanel = this.removePanel.bind(this);\n    }\n\n    removePanel() {\n        console.warn(\"Removing Panel\");\n    }\n\n    render() {\n\n        let draggableStyle = {\n            border: '4px solid f8f9fa'\n        }\n\n        draggableStyle = {\n            ...draggableStyle, ...this.state.style\n        }\n\n        let titleStyle = {\n            border: '1px solid f8f9fa',\n            width: '100%',\n        }\n\n        if (this.props.focus === this.props.id) {\n            let newStyle = {\n                backgroundColor: '#f8f9fa'\n            }\n            draggableStyle = { ...draggableStyle, ...newStyle }\n        }\n\n        let containerStyle = {\n            width: '100%',\n            height: '100%',\n        }\n\n        return (\n\n            <Draggable onDrag={(e) => this.props.changeFocus(e, this.props.id)}>\n                <Resizable\n                    size={{ width: this.state.style.width, height: this.state.style.height }}\n                    onResizeStart={(e) => {e.stopPropagation()}}\n                    onResizeStop={(e, direction, ref, d) => {\n                        e.stopPropagation();\n                        this.setState({\n                            style: {\n                                width: this.state.style.width + d.width,\n                                height: this.state.style.height + d.height,\n                            }\n                        });\n                    }}\n                    style={draggableStyle}\n                >\n                <div style={containerStyle} onClick={(e) => this.props.changeFocus(e, this.props.id)}>\n                    <TitleBar style={titleStyle}\n                        removePanel={this.removePanel}\n                    ></TitleBar>\n                    <SingleBearing>\n                    </SingleBearing>\n                </div>\n                </Resizable>\n\n            </Draggable >\n            \n        )\n    }\n}"]}